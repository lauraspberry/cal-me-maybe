{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView, { AnimatedRegion, Circle, Callout, Marker, PROVIDER_GOOGLE } from 'react-native-maps';\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\nimport { ConsoleLogger, Reachability } from '@aws-amplify/core';\nimport { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from 'aws-amplify';\nimport * as queries from \"../graphql/queries\";\nimport * as mutations from \"../graphql/mutations\";\nimport * as subscriptions from \"../graphql/subscriptions\";\nimport Amplify, { Auth } from \"aws-amplify\";\nimport awsmobile from \"../aws-exports\";\nimport { withAuthenticator } from 'aws-amplify-react-native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nAmplify.configure(_objectSpread(_objectSpread({}, awsmobile), {}, {\n  Analytics: {\n    disabled: true\n  }\n}));\n\nfunction WalkScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var distance = 100;\n  var fields = route.params.paramKey;\n\n  var _React$useState = React.useState({\n    latitude: fields.positionLatitude,\n    longitude: fields.positionLongitude\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      position = _React$useState2[0],\n      setPosition = _React$useState2[1];\n\n  var minutes = fields.time;\n\n  var _React$useState3 = React.useState(fields.time * 60),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      timerCount = _React$useState4[0],\n      setTimer = _React$useState4[1];\n\n  React.useEffect(function () {\n    (function _callee() {\n      var location, latDiff, longDiff, squared, distAway;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 2:\n              location = _context.sent;\n              setPosition({\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude\n              });\n              latDiff = location.coords.latitude - fields.destinationLatitude;\n              longDiff = location.coords.longitude - fields.destinationLongitude;\n              squared = Math.pow(latDiff * latDiff + longDiff * longDiff, 0.5);\n              distAway = squared * 10000 * 3280.4 * (1 / 90);\n\n              if (distAway <= distance) {\n                navigation.navigate(\"Completed Screen\");\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  function failed() {\n    var response, userId, selfData, friends, msg, i;\n    return _regeneratorRuntime.async(function failed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Auth.currentUserInfo());\n\n          case 2:\n            response = _context2.sent;\n            userId = response.username;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(queries.listFriends, {\n              filter: {\n                selfPostsId: {\n                  eq: userId\n                }\n              }\n            })));\n\n          case 6:\n            selfData = _context2.sent;\n            friends = selfData.data.listFriends.items;\n            msg = \"ALERT: \" + userId + \" failed to reach their destination in \" + minutes + \" minutes.\";\n            console.log(friends.length);\n            i = 0;\n\n          case 11:\n            if (!(i < friends.length)) {\n              _context2.next = 17;\n              break;\n            }\n\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(mutations.createAlerts, {\n              input: {\n                from: userId,\n                to: friends[i].username,\n                message: msg\n              }\n            })));\n\n          case 14:\n            i++;\n            _context2.next = 11;\n            break;\n\n          case 17:\n            navigation.navigate(\"Home\");\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  React.useEffect(function () {\n    var interval = setInterval(function () {\n      var time = timerCount;\n\n      if (time > 0) {\n        setTimer(time - 1);\n      } else if (time == 0) {\n        failed();\n        setTimer(time - 1);\n      }\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [timerCount]);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(MapView, {\n      style: styles.map,\n      provider: PROVIDER_GOOGLE,\n      initialRegion: {\n        latitude: position.latitude,\n        longitude: position.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      showsUserLocation: true,\n      followsUserLocation: true,\n      onUserLocationChange: function onUserLocationChange(e) {\n        setPosition({\n          latitude: e.nativeEvent.coordinate.latitude,\n          longitude: e.nativeEvent.coordinate.longitude\n        });\n      },\n      children: _jsx(Marker, {\n        coordinate: {\n          latitude: fields.destinationLatitude,\n          longitude: fields.destinationLongitude\n        },\n        pinColor: \"red\",\n        children: _jsx(Callout, {\n          children: _jsx(Text, {\n            children: \" Destination. \"\n          })\n        })\n      })\n    }), _jsx(View, {\n      style: styles.separator,\n      children: _jsxs(Text, {\n        style: styles.time,\n        children: [Math.floor(timerCount / 60), \" : \", (\"0\" + timerCount % 60).slice(-2)]\n      })\n    })]\n  });\n}\n\nexport default withAuthenticator(WalkScreen, {\n  includeGreeetings: false\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  switchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  separator: {\n    position: \"absolute\",\n    marginVertical: 8,\n    bottom: 0\n  },\n  time: {\n    color: \"#000\",\n    textAlign: 'center',\n    fontSize: 30\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["/Users/studypei/Files/Code/CalMeMaybe copy/src/screens/Walk.js"],"names":["React","Component","render","MapView","AnimatedRegion","Circle","Callout","Marker","PROVIDER_GOOGLE","Permissions","Location","TaskManager","ConsoleLogger","Reachability","useEffect","useState","API","graphqlOperation","queries","mutations","subscriptions","Amplify","Auth","awsmobile","withAuthenticator","configure","Analytics","disabled","WalkScreen","navigation","route","distance","fields","params","paramKey","latitude","positionLatitude","longitude","positionLongitude","position","setPosition","minutes","time","timerCount","setTimer","getCurrentPositionAsync","location","coords","latDiff","destinationLatitude","longDiff","destinationLongitude","squared","Math","pow","distAway","navigate","failed","currentUserInfo","response","userId","username","graphql","listFriends","filter","selfPostsId","eq","selfData","friends","data","items","msg","console","log","length","i","createAlerts","input","from","to","message","interval","setInterval","clearInterval","styles","container","map","latitudeDelta","longitudeDelta","e","nativeEvent","coordinate","separator","floor","slice","includeGreeetings","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","switchContainer","flexDirection","marginVertical","bottom","color","textAlign","fontSize","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Platform, View, SafeAreaView, Text, Button, TouchableOpacity, PermissionsAndroid, StyleSheet, Dimensions } from 'react-native';\nimport MapView, { AnimatedRegion, Circle, Callout, Marker, PROVIDER_GOOGLE } from 'react-native-maps'; \nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\nimport { ConsoleLogger, Reachability } from '@aws-amplify/core';\n\nimport { useEffect, useState } from \"react\";\n\nimport { API, graphqlOperation } from 'aws-amplify';\nimport * as queries from \"../graphql/queries\";\nimport * as mutations from \"../graphql/mutations\";\nimport * as subscriptions from \"../graphql/subscriptions\";\n\nimport Amplify, { Auth } from \"aws-amplify\";\nimport awsmobile from '../aws-exports';\nimport { withAuthenticator } from 'aws-amplify-react-native';\n\n\nAmplify.configure({\n    ...awsmobile,\n    Analytics: {\n      disabled: true,\n    },\n});\n\nfunction WalkScreen({navigation, route}) {\n  // Define position state: {latitude: number, longitude: number}\n  const distance = 100;\n  const fields = route.params.paramKey;\n  const [position, setPosition] = React.useState({\n    latitude: fields.positionLatitude,\n    longitude: fields.positionLongitude,\n  });\n  const minutes = fields.time;\n  const [timerCount, setTimer] = React.useState(fields.time*60);\n\n  React.useEffect(() => {\n\n    (async () => {\n      let location = await Location.getCurrentPositionAsync({});\n      setPosition({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n      });\n      let latDiff = location.coords.latitude - fields.destinationLatitude;\n      let longDiff = location.coords.longitude - fields.destinationLongitude;\n      let squared = Math.pow(latDiff * latDiff + longDiff * longDiff, 0.5)\n      let distAway = squared * 10000 * 3280.4 * (1/90);\n      if (distAway <= distance) {\n        navigation.navigate(\"Completed Screen\");\n      }\n    })();\n  }, []);\n\n  async function failed() {\n    const response = await Auth.currentUserInfo();\n    const userId = response.username;\n    const selfData = await API.graphql(graphqlOperation(queries.listFriends, { filter: {selfPostsId: {eq: userId}} }));\n    const friends = selfData.data.listFriends.items;\n    const msg = `ALERT: ${userId} failed to reach their destination in ${minutes} minutes.`;\n    console.log(friends.length)\n    for (let i = 0; i < friends.length; i++ ) {\n      await API.graphql(graphqlOperation(mutations.createAlerts, \n      { input: {from: userId, to: friends[i].username, message: msg}}))\n    }\n    navigation.navigate(\"Home\");\n  }\n\n  React.useEffect(() => {\n      \n    const interval = setInterval(() => {\n        let time = timerCount;\n        if (time > 0){\n          setTimer(time - 1);\n        } else if (time == 0) {\n          failed();\n          setTimer(time - 1);\n        }\n      }, 1000);\n      \n    return () => clearInterval(interval);\n  }, [timerCount])\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <MapView\n        style = {styles.map}\n        provider = {PROVIDER_GOOGLE} \n        initialRegion = {{\n            latitude: position.latitude,\n            longitude: position.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n        }}\n        showsUserLocation = {true}\n        followsUserLocation = {true}\n        onUserLocationChange = {(e) => {\n          setPosition({\n            latitude: e.nativeEvent.coordinate.latitude,\n            longitude: e.nativeEvent.coordinate.longitude,\n          });\n        }}\n      >\n        <Marker\n          coordinate = {{\n            latitude: fields.destinationLatitude,\n            longitude: fields.destinationLongitude,\n          }}\n          pinColor = \"red\"\n        >\n          <Callout>\n            <Text> Destination. </Text>\n          </Callout>\n        </Marker>\n      </MapView>\n      <View style = {styles.separator}>\n          <Text style = {styles.time}>{Math.floor(timerCount/60)} : {(\"0\" + timerCount % 60).slice(-2)}</Text>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nexport default withAuthenticator(WalkScreen, { includeGreeetings: false})\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  switchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  separator: {\n    position: \"absolute\",\n    marginVertical: 8,\n    bottom: 0,\n  },\n  time: {\n      color: \"#000\",\n      textAlign: 'center',\n      fontSize: 30,\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n  },\n})"]},"metadata":{},"sourceType":"module"}