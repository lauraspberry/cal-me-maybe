{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Auth } from \"aws-amplify\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'stretch'\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 2,\n    alignSelf: 'stretch',\n    padding: 10,\n    flexWrap: 'wrap'\n  },\n  text: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    alignSelf: 'center'\n  }\n});\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation,\n      params = _ref.params;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      onChangeEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      onChangePass = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      confirmPass = _React$useState6[0],\n      onChangeConfirm = _React$useState6[1];\n\n  var fields = {\n    email: params.Email,\n    password: params.Password\n  };\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && password === confirmPass;\n  }\n\n  function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!validateForm) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Auth.signUp({\n              username: email,\n              password: password,\n              attributes: {\n                email: email\n              }\n            }));\n\n          case 4:\n            fields.email = email;\n            fields.password = password;\n            navigation.navigate('Confirm Screen', {\n              paramKey: fields\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            alert(\"Error!\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \" Sign Up \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeEmail,\n      value: email,\n      placeholder: \"Enter your email.\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangePass,\n      value: password,\n      placeholder: \"Enter your password.\",\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeConfirm,\n      value: confirmPass,\n      placeholder: \"Enter your password AGAIN.\",\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: handleSubmit\n    })]\n  });\n};\n\nexport default SignUpScreen;","map":{"version":3,"sources":["/Users/studypei/Files/Code/CalMeMaybe copy/src/screens/SignUp.js"],"names":["React","Auth","NavigationContainer","styles","StyleSheet","create","container","flex","justifyContent","alignItems","input","height","margin","borderWidth","alignSelf","padding","flexWrap","text","fontSize","fontWeight","SignUpScreen","navigation","params","useState","email","onChangeEmail","password","onChangePass","confirmPass","onChangeConfirm","fields","Email","Password","validateForm","length","handleSubmit","signUp","username","attributes","navigate","paramKey","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SafeAreaView, TextInput, Text, View, StyleSheet, Button } from 'react-native';\nimport { Auth } from \"aws-amplify\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nconst styles = StyleSheet.create ({\n    container: {\n        flex: 1,\n        justifyContent: 'flex-start',\n        alignItems: 'stretch',\n        //backgroundColor: \n    },\n    input: {\n        height: 40,\n        margin: 5,\n        borderWidth: 2,\n        alignSelf: 'stretch',\n        padding: 10,\n        flexWrap: 'wrap',\n    },\n    text: {\n        fontSize: 30, \n        fontWeight: 'bold', \n        alignSelf: 'center',\n    },\n});\n\nconst SignUpScreen = ({ navigation, params }) => {\n    const [email, onChangeEmail] = React.useState(\"\");\n    const [password, onChangePass] = React.useState(\"\");\n    const [confirmPass, onChangeConfirm] = React.useState(\"\");\n\n    const fields = {\n        email: params.Email,\n        password: params.Password,\n    }\n    \n\n    function validateForm() {\n        return (\n          email.length > 0 &&\n          password.length > 0 &&\n          password === confirmPass\n        );\n    }\n\n    async function handleSubmit() {\n        if(validateForm){\n            try {\n                await Auth.signUp({\n                    username: email,\n                    password: password,\n                    attributes: {\n                        email: email\n                    }\n                });\n                fields.email = email;\n                fields.password = password;\n                navigation.navigate('Confirm Screen', {\n                    paramKey: fields,\n                });\n            } catch (e) {\n                alert(\"Error!\");\n            }\n        }        \n    }\n\n    return (\n        <SafeAreaView style = {styles.container}>\n            <Text style = {styles.text}> Sign Up </Text>\n            <TextInput\n                style = {styles.input}\n                onChangeText = {onChangeEmail}\n                value = {email}\n                placeholder = \"Enter your email.\"\n                keyboardType = \"email-address\"\n            />\n            <TextInput \n                style = {styles.input}\n                onChangeText = {onChangePass}\n                value = {password}\n                placeholder = \"Enter your password.\"\n                secureTextEntry\n            />\n            <TextInput \n                style = {styles.input}\n                onChangeText = {onChangeConfirm}\n                value = {confirmPass}\n                placeholder = \"Enter your password AGAIN.\"\n                secureTextEntry\n            />\n            <Button \n                title = \"Sign Up\" onPress = {handleSubmit}\n            />\n        </SafeAreaView>\n\n    );\n}\n\nexport default SignUpScreen; "]},"metadata":{},"sourceType":"module"}