{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Auth } from \"aws-amplify\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 10,\n    borderWidth: 1,\n    padding: 10\n  }\n});\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      onChangeEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      onChangePassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      confirmPass = _React$useState6[0],\n      onChangeConfirm = _React$useState6[1];\n\n  var fields = {\n    email: \"\",\n    password: \"\"\n  };\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0 && password == confirmPass;\n  }\n\n  function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!validateForm) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Auth.signUp({\n              username: email,\n              password: password,\n              attributes: {\n                email: email\n              }\n            }));\n\n          case 4:\n            fields.email = email;\n            fields.password = password;\n            navigation.navigate('Confirm Screen', {\n              paramKey: fields\n            });\n            _context.next = 11;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  }\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 30,\n        fontWeight: 'bold'\n      },\n      children: \" Sign Up \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeEmail,\n      value: email,\n      placeholder: \"Enter your email\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangePassword,\n      value: password,\n      placeholder: \"Enter your password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeConfirm,\n      value: confirmPass,\n      placeholder: \"Enter your password again\"\n    }), _jsx(Button, {\n      title: \"Sign Up\",\n      onPress: handleSubmit\n    })]\n  });\n};\n\nexport default SignUpScreen;","map":{"version":3,"sources":["/Users/studypei/Files/Code/CalMeMaybe/src/screens/SignUp.js"],"names":["React","Auth","NavigationContainer","styles","StyleSheet","create","container","flex","alignItems","justifyContent","input","height","margin","borderWidth","padding","SignUpScreen","navigation","useState","email","onChangeEmail","password","onChangePassword","confirmPass","onChangeConfirm","fields","validateForm","length","handleSubmit","signUp","username","attributes","navigate","paramKey","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SafeAreaView, TextInput, Text, View, StyleSheet, Button } from 'react-native';\n//import { showMessage, FlashMessage } from \"react-native-flash-message\";\nimport { Auth } from \"aws-amplify\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    input: {\n        height: 40,\n        margin: 10,\n        borderWidth: 1,\n        padding: 10,\n    },\n\n});\n\nconst SignUpScreen = ({ navigation }) => {\n    const [email, onChangeEmail] = React.useState(\"\");\n    const [password, onChangePassword] = React.useState(\"\");\n    const [confirmPass, onChangeConfirm] = React.useState(\"\");\n\n    const fields = {\n        email: \"\",\n        password: \"\",\n    }\n\n    function validateForm() {\n        return (\n            email.length > 0 &&\n            password.length > 0 &&\n            password == confirmPass\n        )\n    }\n\n    async function handleSubmit() {\n        if(validateForm) {\n            try {\n                await Auth.signUp({\n                    username: email,\n                    password: password,\n                    attributes: {\n                        email: email\n                    }\n                });\n                fields.email = email;\n                fields.password = password;\n                navigation.navigate('Confirm Screen', {\n                    paramKey: fields,\n                });\n            } catch (e) {\n                \n            }\n        } \n    }\n\n    return (\n        <SafeAreaView style = {styles.container}>\n            <Text style = {{ fontSize: 30, fontWeight: 'bold'}}> Sign Up </Text>\n            <TextInput\n                style = {styles.input}\n                onChangeText = {onChangeEmail}\n                value = {email}\n                placeholder = \"Enter your email\"\n                keyboardType = \"email-address\"\n            />\n            <TextInput\n                style = {styles.input}\n                onChangeText = {onChangePassword}\n                value = {password}\n                placeholder = \"Enter your password\"\n            />\n            <TextInput\n                style = {styles.input}\n                onChangeText = {onChangeConfirm}\n                value = {confirmPass}\n                placeholder = \"Enter your password again\"\n            />\n            <Button \n                title = \"Sign Up\" onPress = {handleSubmit}\n            />\n        </SafeAreaView>\n\n    )\n}\n\nexport default SignUpScreen;"]},"metadata":{},"sourceType":"module"}