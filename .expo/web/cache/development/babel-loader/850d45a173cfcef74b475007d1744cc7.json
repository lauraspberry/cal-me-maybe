{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./screens/Landing.js\";\nimport HomeScreen from \"./screens/Home.js\";\nimport LoginScreen from \"./screens/Login.js\";\nimport SignUpScreen from \"./screens/SignUp.js\";\nimport ConfirmScreen from \"./screens/Confirm.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RootStack = createStackNavigator();\n\nvar App = function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isAuthenticated = _React$useState2[0],\n      setIsAuthenticated = _React$useState2[1];\n\n  return _jsx(NavigationContainer, {\n    children: _jsx(RootStack.Navigator, {\n      children: isAuthenticated ? _jsx(RootStack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(RootStack.Screen, {\n          name: \"Cal Me Maybe\",\n          component: LandingScreen\n        }), _jsx(RootStack.Screen, {\n          name: \"Sign In\",\n          children: function children(props) {\n            return _jsx(LoginScreen, _objectSpread(_objectSpread({}, props), {}, {\n              LogIn: setIsAuthenticated\n            }));\n          }\n        }), _jsx(RootStack.Screen, {\n          name: \"Sign Up\",\n          children: function children(props) {\n            return _jsx(SignUpScreen, _objectSpread(_objectSpread({}, props), {}, {\n              LogIn: setIsAuthenticated\n            }));\n          }\n        }), _jsx(RootStack.Screen, {\n          name: \"Confirm Screen\",\n          children: function children(props) {\n            return _jsx(ConfirmScreen, _objectSpread(_objectSpread({}, props), {}, {\n              LogIn: setIsAuthenticated\n            }));\n          }\n        })]\n      })\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/studypei/Files/Code/CalMeMaybe/src/App.js"],"names":["React","NavigationContainer","createStackNavigator","LandingScreen","HomeScreen","LoginScreen","SignUpScreen","ConfirmScreen","RootStack","App","useState","isAuthenticated","setIsAuthenticated","props"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAIA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;;;;AAGA,IAAMC,SAAS,GAAGN,oBAAoB,EAAtC;;AAIA,IAAMO,GAAG,GAAG,SAANA,GAAM,GAAM;AACd,wBAA8CT,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9C;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,kBAAxB;;AAMA,SACA,KAAC,mBAAD;AAAA,cACI,KAAC,SAAD,CAAW,SAAX;AAAA,gBACKD,eAAe,GACZ,KAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,IAAI,EAAC,MAAvB;AAA8B,QAAA,SAAS,EAAEP;AAAzC,QADY,GAGZ;AAAA,mBACA,KAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,IAAI,EAAC,cAAvB;AAAsC,UAAA,SAAS,EAAED;AAAjD,UADA,EAEA,KAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,IAAI,EAAG,SAAzB;AAAA,oBACK,kBAACU,KAAD;AAAA,mBACG,KAAC,WAAD,kCAAiBA,KAAjB;AAAwB,cAAA,KAAK,EAAID;AAAjC,eADH;AAAA;AADL,UAFA,EAOA,KAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,IAAI,EAAG,SAAzB;AAAA,oBACK,kBAACC,KAAD;AAAA,mBACG,KAAC,YAAD,kCAAkBA,KAAlB;AAAyB,cAAA,KAAK,EAAID;AAAlC,eADH;AAAA;AADL,UAPA,EAYA,KAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,IAAI,EAAG,gBAAzB;AAAA,oBACK,kBAACC,KAAD;AAAA,mBACG,KAAC,aAAD,kCAAmBA,KAAnB;AAA0B,cAAA,KAAK,EAAID;AAAnC,eADH;AAAA;AADL,UAZA;AAAA;AAJR;AADJ,IADA;AA4BH,CAnCD;;AAoCA,eAAeH,GAAf","sourcesContent":["import React from 'react'; \nimport { NavigationContainer } from '@react-navigation/native'; \nimport { createStackNavigator } from '@react-navigation/stack';\n\n//import { Auth } from \"aws-amplify\";\n\nimport LandingScreen from './screens/Landing.js'; \nimport HomeScreen from './screens/Home.js';\nimport LoginScreen from './screens/Login.js';\nimport SignUpScreen from './screens/SignUp.js';\nimport ConfirmScreen from './screens/Confirm.js';\n\n\nconst RootStack = createStackNavigator();\n\n\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n\n    // const handleSignUp = ({ navigation }) => {\n    //     navigation.navigate(ConfirmScreen);\n    // }\n\n    return ( \n    <NavigationContainer> \n        <RootStack.Navigator>\n            {isAuthenticated ? (\n                <RootStack.Screen name=\"Home\" component={HomeScreen} />\n            ) : (\n                <>\n                <RootStack.Screen name=\"Cal Me Maybe\" component={LandingScreen} />\n                <RootStack.Screen name = \"Sign In\"> \n                    {(props) => (\n                        <LoginScreen {...props} LogIn = {setIsAuthenticated} />\n                    )}\n                </RootStack.Screen>\n                <RootStack.Screen name = \"Sign Up\"> \n                    {(props) => (\n                        <SignUpScreen {...props} LogIn = {setIsAuthenticated} />\n                    )}\n                </RootStack.Screen>\n                <RootStack.Screen name = \"Confirm Screen\"> \n                    {(props) => (\n                        <ConfirmScreen {...props} LogIn = {setIsAuthenticated} />\n                    )}\n                </RootStack.Screen>\n                </>\n            )}\n        </RootStack.Navigator>\n    </NavigationContainer>\n    );\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}